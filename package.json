{
  "_args": [
    [
      {
        "raw": "https://github.com/leonacky/react-native-fcm.git",
        "scope": null,
        "escapedName": null,
        "name": null,
        "rawSpec": "https://github.com/leonacky/react-native-fcm.git",
        "spec": "git+https://github.com/leonacky/react-native-fcm.git",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:leonacky/react-native-fcm.git",
          "sshUrl": "git+ssh://git@github.com/leonacky/react-native-fcm.git",
          "httpsUrl": "git+https://github.com/leonacky/react-native-fcm.git",
          "gitUrl": "git://github.com/leonacky/react-native-fcm.git",
          "shortcut": "github:leonacky/react-native-fcm",
          "directUrl": "https://raw.githubusercontent.com/leonacky/react-native-fcm/master/package.json"
        }
      },
      "/Volumes/DATA/react_native/vatgiateam/VatGia"
    ]
  ],
  "_from": "git+https://github.com/leonacky/react-native-fcm.git",
  "_id": "react-native-fcm@2.4.0",
  "_inCache": true,
  "_location": "/react-native-fcm",
  "_phantomChildren": {},
  "_requested": {
    "raw": "https://github.com/leonacky/react-native-fcm.git",
    "scope": null,
    "escapedName": null,
    "name": null,
    "rawSpec": "https://github.com/leonacky/react-native-fcm.git",
    "spec": "git+https://github.com/leonacky/react-native-fcm.git",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:leonacky/react-native-fcm.git",
      "sshUrl": "git+ssh://git@github.com/leonacky/react-native-fcm.git",
      "httpsUrl": "git+https://github.com/leonacky/react-native-fcm.git",
      "gitUrl": "git://github.com/leonacky/react-native-fcm.git",
      "shortcut": "github:leonacky/react-native-fcm",
      "directUrl": "https://raw.githubusercontent.com/leonacky/react-native-fcm/master/package.json"
    }
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "git+https://github.com/leonacky/react-native-fcm.git#fc30dab9a2b213ae51f4823315eab27800b7dacb",
  "_shasum": "9820e8f6ebcbbe94e280bbd18a8a4654617ac0a0",
  "_shrinkwrap": null,
  "_spec": "https://github.com/leonacky/react-native-fcm.git",
  "_where": "/Volumes/DATA/react_native/vatgiateam/VatGia",
  "author": {
    "name": "Libin Lu"
  },
  "bugs": {
    "url": "https://github.com/evollu/react-native-fcm/issues"
  },
  "dependencies": {},
  "description": "React Native bridge for firebase cloud messaging (FCM)",
  "devDependencies": {},
  "gitHead": "fc30dab9a2b213ae51f4823315eab27800b7dacb",
  "homepage": "https://github.com/evollu/react-native-fcm",
  "keywords": [
    "React-Native",
    "ios",
    "android",
    "fcm",
    "firebase",
    "cloud messaging"
  ],
  "license": "MIT",
  "name": "react-native-fcm",
  "optionalDependencies": {},
  "readme": "[![Join the chat at https://gitter.im/evollu/react-native-fcm](https://badges.gitter.im/evollu/react-native-fcm.svg)](https://gitter.im/evollu/react-native-fcm?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n## NOTE: \n- Just support for RN 0.33.0 and above\n- Otherwise use latest v2 and use XCode 8 and latest Firebase SDK (iOS 3.6.0)\n- local notification is only available in V2\n\n- @antoinerousseau has a working project setup so you can check if there is issue https://github.com/antoinerousseau/tribeez\n\n## Installation\n\n- Run `npm i -S https://github.com/leonacky/react-native-fcm.git`\n- Run `react-native link react-native-fcm`\n\n## Android Configuration\n\n- Edit `android/build.gradle`:\n```diff\n  dependencies {\n    classpath 'com.android.tools.build:gradle:2.0.0'\n+   classpath 'com.google.gms:google-services:3.0.0'\n```\n\n- Edit `android/app/build.gradle`:\n```diff\n  apply plugin: \"com.android.application\"\n+ apply plugin: 'com.google.gms.google-services'\n```\n\n- Edit `android/app/src/main/AndroidManifest.xml`:\n\n```diff\n  <application\n    ...\n    android:theme=\"@style/AppTheme\">\n\n+   <service android:name=\"com.evollu.react.fcm.MessagingService\">\n+     <intent-filter>\n+       <action android:name=\"com.google.firebase.MESSAGING_EVENT\"/>\n+     </intent-filter>\n+   </service>\n\n+   <service android:name=\"com.evollu.react.fcm.InstanceIdService\" android:exported=\"false\">\n+     <intent-filter>\n+       <action android:name=\"com.google.firebase.INSTANCE_ID_EVENT\"/>\n+     </intent-filter>\n+   </service>\n\n    ...\n```\n\n### Config for notification and `click_action` in Android\n\nTo allow android to respond to `click_action`, you need to define Activities and filter on specific intent. Since all javascript is running in MainActivity, you can have MainActivity to handle actions:\n\nEdit `AndroidManifest.xml`:\n\n```diff\n  <activity\n    android:name=\".MainActivity\"\n    android:label=\"@string/app_name\"\n    android:windowSoftInputMode=\"adjustResize\"\n+   android:launchMode=\"singleTop\"\n    android:configChanges=\"keyboard|keyboardHidden|orientation|screenSize\">\n    <intent-filter>\n      <action android:name=\"android.intent.action.MAIN\" />\n      <category android:name=\"android.intent.category.LAUNCHER\" />\n    </intent-filter>\n+   <intent-filter>\n+     <action android:name=\"fcm.ACTION.HELLO\" />\n+     <category android:name=\"android.intent.category.DEFAULT\" />\n+   </intent-filter>\n  </activity>\n```\n\nNotes:\n- `launchMode=\"singleTop\"` is to reuse MainActivity\n- replace `\"fcm.ACTION.HELLO\"` by the `click_action` you want to match\n\n\nIf you are using RN < 0.30.0 and react-native-fcm < 1.0.16, pass intent into package, edit `MainActivity.java`:\n\n- RN 0.28:\n\n```diff\n  import com.facebook.react.ReactActivity;\n+ import android.content.Intent;\n\n  public class MainActivity extends ReactActivity {\n\n+   @Override\n+   public void onNewIntent (Intent intent) {\n+     super.onNewIntent(intent);\n+       setIntent(intent);\n+   }       \n```\n\nNOTE: Verify that react-native links correctly in `MainApplication.java`\n\n```diff\nimport android.app.application\n...\n+import com.evollu.react.fcm.FIRMessagingPackage;\n```\n....\n```diff\n    @Override\n    protected List<ReactPackage> getPackages() {\n      return Arrays.<ReactPackage>asList(\n          new MainReactPackage(),\n          new VectorIconsPackage(),\n+         new FIRMessagingPackage(),\n          new RNDeviceInfo(),\n      );\n    }\n ```   \n\n\n\n- RN <= 0.27:\n\n```diff\n  import com.facebook.react.ReactActivity;\n+ import android.content.Intent;\n\n  public class MainActivity extends ReactActivity {\n\n+   @Override\n+   protected void onNewIntent (Intent intent) {\n+     super.onNewIntent(intent);\n+       setIntent(intent);\n+   }       \n```\n\nNotes:\n- `@Override` is added to update intent on notification click\n\n## IOS Configuration\n\n### Pod approach:\n\nMake sure you have Cocoapods version > 1.0\n\nInstall the `Firebase/Messaging` pod:\n```\ncd ios && pod init\npod install Firebase/Messaging\n```\nuncomment the \"use_frameworks!\" line in the podfile.\n\n### Non Cocoapod approach\n\n1. Download the Firebase SDK framework from [Integrate without CocoaPods](https://firebase.google.com/docs/ios/setup#frameworks)\n2. Follow the `README` to link frameworks (Analytics+Messaging)\n\n### Shared steps\nEdit `AppDelegate.h`:\n```diff\n+ @import UserNotifications;\n+\n+ @interface AppDelegate : UIResponder <UIApplicationDelegate,UNUserNotificationCenterDelegate>\n- @interface AppDelegate : UIResponder <UIApplicationDelegate>\n```\n\nEdit `AppDelegate.m`:\n```diff\n+ #import \"RNFIRMessaging.h\"\n  //...\n\n  - (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions\n  {\n  //...\n+   [FIRApp configure];\n+   [[UNUserNotificationCenter currentNotificationCenter] setDelegate:self];\n+ }\n+\n+ - (void)userNotificationCenter:(UNUserNotificationCenter *)center willPresentNotification:(UNNotification *)notification withCompletionHandler:(void (^)(UNNotificationPresentationOptions))completionHandler\n+ {\n+   [[NSNotificationCenter defaultCenter] postNotificationName:FCMNotificationReceived object:self userInfo:notification.request.content.userInfo];\n+     if([[notification.request.content.userInfo valueForKey:@\"show_in_foreground\"] isEqual:@YES]){\n+     completionHandler(UNNotificationPresentationOptionAlert | UNNotificationPresentationOptionBadge | UNNotificationPresentationOptionSound);\n+   }else{\n+     completionHandler(UNNotificationPresentationOptionNone);\n+   }\n+\n+ }\n+\n+ - (void)userNotificationCenter:(UNUserNotificationCenter *)center didReceiveNotificationResponse:(UNNotificationResponse *)response withCompletionHandler:(void (^)())completionHandler\n+ {\n+     NSDictionary* userInfo = [[NSMutableDictionary alloc] initWithDictionary: response.notification.request.content.userInfo];\n+   [userInfo setValue:@YES forKey:@\"opened_from_tray\"];\n+   [[NSNotificationCenter defaultCenter] postNotificationName:FCMNotificationReceived object:self userInfo:userInfo];\n+ }\n+\n+ //You can skip this method if you don't want to use local notification\n+ -(void)application:(UIApplication *)application didReceiveLocalNotification:(UILocalNotification *)notification {\n+   [[NSNotificationCenter defaultCenter] postNotificationName:FCMNotificationReceived object:self + userInfo:notification.userInfo];\n+ }\n+ \n+ - (void)application:(UIApplication *)application didReceiveRemoteNotification:(nonnull NSDictionary *)userInfo fetchCompletionHandler:(nonnull void (^)(UIBackgroundFetchResult))completionHandler{\n+   [[NSNotificationCenter defaultCenter] postNotificationName:FCMNotificationReceived object:self userInfo:userInfo];\n+   completionHandler(UIBackgroundFetchResultNoData);\n+ }\n```\n\n### FCM config file\n\nIn [firebase console](https://console.firebase.google.com/), you can get `google-services.json` file and place it in `android/app` directory and get `GoogleService-Info.plist` file and place it in `/ios/your-project-name` directory (next to your `Info.plist`)\n \n## Setup Local Notifications\nNOTE: local notification does NOT have any dependency on FCM library but you still need to include Firebase to compile. If there are enough demand to use this functionality alone, I will separate it out into another repo\n\n### IOS\nNo change required\n \n### Android\nEdit AndroidManifest.xml\n```diff\n  <uses-permission android:name=\"android.permission.INTERNET\" />\n+ <uses-permission android:name=\"android.permission.RECEIVE_BOOT_COMPLETED\" />\n+ <uses-permission android:name=\"android.permission.VIBRATE\" />\n \n  <application\n+      <receiver android:name=\"com.evollu.react.fcm.FIRLocalMessagingPublisher\"/>\n+      <receiver android:enabled=\"true\" android:exported=\"true\"  android:name=\"com.evollu.react.fcm.FIRSystemBootEventReceiver\">\n+          <intent-filter>\n+              <action android:name=\"android.intent.action.BOOT_COMPLETED\"/>\n+              <action android:name=\"android.intent.action.QUICKBOOT_POWERON\"/>\n+              <action android:name=\"com.htc.intent.action.QUICKBOOT_POWERON\"/>\n+              <category android:name=\"android.intent.category.DEFAULT\" />\n+          </intent-filter>\n+      </receiver>\n  </application>\n``` \nNOTE: `com.evollu.react.fcm.FIRLocalMessagingPublisher` is required for presenting local notifications. `com.evollu.react.fcm.FIRSystemBootEventReceiver` is required only if you need to schedule future or recurring local notifications\n\n\n## Usage\n\n```javascript\nimport FCM from 'react-native-fcm';\n\nclass App extends Component {\n    componentDidMount() {\n        FCM.requestPermissions(); // for iOS\n        FCM.getFCMToken().then(token => {\n            console.log(token)\n            // store fcm token in your server\n        });\n        this.notificationUnsubscribe = FCM.on('notification', (notif) => {\n            // there are two parts of notif. notif.notification contains the notification payload, notif.data contains data payload\n            if(notif.local_notification){\n              //this is a local notification\n            }\n            if(notif.opened_from_tray){\n              //app is open/resumed because user clicked banner\n            }\n        });\n        this.refreshUnsubscribe = FCM.on('refreshToken', (token) => {\n            console.log(token)\n            // fcm token may not be available on first load, catch it here\n        });\n    }\n\n    componentWillUnmount() {\n        // prevent leaking\n        this.refreshUnsubscribe();\n        this.notificationUnsubscribe();\n    }\n \n    otherMethods(){\n        FCM.subscribeToTopic('/topics/foo-bar');\n        FCM.unsubscribeFromTopic('/topics/foo-bar');\n        FCM.getInitialNotification().then(notif=>console.log(notif));\n        FCM.presentLocalNotification({\n            id: \"UNIQ_ID_STRING\",                               // (optional for instant notification)\n            title: \"My Notification Title\",                     // as FCM payload\n            body: \"My Notification Message\",                    // as FCM payload (required)\n            sound: \"default\",                                   // as FCM payload\n            priority: \"high\",                                   // as FCM payload\n            click_action: \"ACTION\",                             // as FCM payload\n            badge: 10,                                          // as FCM payload IOS only, set 0 to clear badges\n            number: 10,                                         // Android only\n            ticker: \"My Notification Ticker\",                   // Android only\n            auto_cancel: true,                                  // Android only (default true)\n            large_icon: \"ic_launcher\",                           // Android only\n            icon: \"ic_notification\",                            // as FCM payload\n            big_text: \"Show when notification is expanded\",     // Android only\n            sub_text: \"This is a subText\",                      // Android only\n            color: \"red\",                                       // Android only\n            vibrate: 300,                                       // Android only default: 300, no vibration if you pass null\n            tag: 'some_tag',                                    // Android only\n            group: \"group\",                                     // Android only\n            my_custom_data:'my_custom_field_value',             // extra data you want to throw\n            lights: true,                                       // Android only, LED blinking (default false)\n            show_in_foreground                                  // notification when app is in foreground (local & remote)\n        });\n \n        FCM.scheduleLocalNotification({\n            fire_date: new Date().getTime(),      //RN's converter is used, accept epoch time and whatever that converter supports\n            id: \"UNIQ_ID_STRING\",    //REQUIRED! this is what you use to lookup and delete notification. In android notification with same ID will override each other\n            body: \"from future past\",\n            repeat_interval: \"week\" //day, hour\n        })\n\n        FCM.getScheduledLocalNotifications().then(notif=>console.log(notif));\n        FCM.cancelLocalNotification(\"UNIQ_ID_STRING\");\n        FCM.cancelAllLocalNotifications();\n        FCM.setBadgeNumber();                                       // iOS only and there's no way to set it in Android, yet.\n        FCM.getBadgeNumber().then(number=>console.log(number));     // iOS only and there's no way to get it in Android, yet.\n        FCM.send('984XXXXXXXXX', {\n          my_custom_data_1: 'my_custom_field_value_1', \n          my_custom_data_2: 'my_custom_field_value_2'\n        });\n    }\n}\n```\n\n### Behaviour when sending `notification` and `data` payload through GCM\n- When app is not running and user clicks notification, notification data will be passed into `FCM.getInitialNotification` event\n\n- When app is running in background (the tricky one, I strongly suggest you try it out yourself)\n - IOS will receive notificaton from `FCMNotificationReceived` event\n    * if you pass `content_available` flag true, you will receive one when app is in background and another one when user resume the app. [more info](http://www.rahuljiresal.com/2015/03/retract-push-notifications-on-ios/)\n    * if you just pass `notification`, you will only receive one when user resume the app.\n    * you will not see banner if `notification->body` is not defined.\n - Android will receive notificaton from `FCMNotificationReceived` event\n    * if you pass `notification` payload, it will receive data when user click on notification\n    * if you pass `data` payload only, it will receive data when in background\n\n   e.g. fcm payload looks like:\n\n   ```json\n   {\n      \"to\":\"some_device_token\",\n      \"content_available\": true,\n      \"notification\": {\n          \"title\": \"hello\",\n          \"body\": \"yo\",\n          \"click_action\": \"fcm.ACTION.HELLO\"\n      },\n      \"data\": {\n          \"extra\":\"juice\"\n      }\n    }\n    ```\n\n    and event callback will receive as:\n    \n    - Android\n      ```json\n      {\n        \"fcm\": {\"action\": \"fcm.ACTION.HELLO\"},\n        \"opened_from_tray\": 1,\n        \"extra\": \"juice\"\n      }\n      ```\n    \n    - iOS\n      ```json\n      {\n        \"apns\": {\"action_category\": \"fcm.ACTION.HELLO\"},\n        \"opened_from_tray\": 1,\n        \"extra\": \"juice\"\n      }\n      ```\n\n- When app is running in foreground\n - IOS will receive notification and android **won't** (better not to do anything in foreground for hybrid and send a separate data message.)\n\nNOTE: it is recommended not to rely on `data` payload for click_action as it can be overwritten (check [this](http://stackoverflow.com/questions/33738848/handle-multiple-notifications-with-gcm)).\n\n### Quick notes about upstream messages\nIf your app server implements the [XMPP Connection Server](https://firebase.google.com/docs/cloud-messaging/server#implementing-the-xmpp-connection-server-protocol) protocol, it can receive upstream messages from a user's device to the cloud. To initiate an upstream message, call the `FCM.send()` method with your Firebase `Sender ID` and a `Data Object` as parameters as follows:\n\n```javascript\nFCM.send('984XXXXXXXXX', {\n  my_custom_data_1: 'my_custom_field_value_1', \n  my_custom_data_2: 'my_custom_field_value_2'\n});\n```\n\nThe `Data Object` is message data comprising as many key-value pairs of the message's payload as are needed (ensure that the value of each pair in the data object is a `string`). Your `Sender ID` is a unique numerical value generated when you created your Firebase project, it is available in the `Cloud Messaging` tab of the Firebase console `Settings` pane. The sender ID is used to identify each app server that can send messages to the client app.\n\n## Q & A\n\n#### Why do you build another local notification\nYes there are `react-native-push-notification` and `react-native-system-notification` which are great libraries. However\n- We want a unified local notification library but people are reporting using react-native-push-notification with this repo has compatibility issue as `react-native-push-notification` also sets up GCM.\n- We want to have local notification to have similar syntax as remote notification payload.\n- The PushNotificationIOS by react native team is still missing features that recurring, so we are adding it here\n\n#### My Android build is failing\nTry update your SDK and google play service\n\n#### My App throws FCM function undefined error\nThere seems to be link issue with rnpm. Make sure that there is `new FIRMessagingPackage(),` in your `Application.java` file\n\n#### I can't get notification when app is killed\nIf you send notification with `data` only, you can only get the data message when app is in foreground or background. Killed app doesn't trigger `FCMNotificationReceived`. Use `notification` in the payload instead.\n\n#### App running in background doesn't trigger `FCMNotificationReceived` when receiving hybrid notification [Android]\nThese is [an issue opened for that](https://github.com/google/gcm/issues/63). Behavior is not consistent between 2 platforms\n\n#### Android notification is showing a white icon\nSince Lollipop, the push notification icon is required to be all white, otherwise it will be a white circle.\n\n#### iOS not receiving notification when the app running in the background\n- Try adding Background Modes permission in Xcode->Click on project file->Capabilities tab->Background Modes->Remote Notifications\n\n#### I am using Proguard\nYou need to add this to your `android/app/proguard-rules.pro`:\n```\n# Google Play Services\n-keep class com.google.android.gms.** { *; }\n-dontwarn com.google.android.gms.**\n```\n\n#### I'm getting `com.android.dex.DexException: Multiple dex files define Lcom/google/android/gms/internal/zzqf;`\nIt is most likely that you are using other react-native-modules that requires conflicting google play service\nsearch for `compile \"com.google.android.gms` in android and see who specifies specific version. Resolve conflict by loosing their version or specify a version resolve in gradle.\n\n#### How do I tell if user clicks the notification banner?\nCheck open from tray flag in notification. It will be either 0 or 1 for iOS and undefined or 1 for android. I decide for iOS based on [this](http://stackoverflow.com/questions/20569201/remote-notification-method-called-twice), and for android I set it if notification is triggered by intent change.\n\n#### Android notification doesn't vibrate/show head-up display etc\nAll available features are [here](https://firebase.google.com/docs/cloud-messaging/http-server-ref#notification-payload-support). FCM may add more support in the future but there is no timeline. If you need these features now, send notification with `data` only and creating notification locally is the only way.\nOr you can send `data` using FCM and build a local notification\n\n#### How do I do xxx with FCM?\ncheck out [official docs and see if they support](https://firebase.google.com/docs/cloud-messaging/concept-options)\n\n#### I want to add advanced feature that FCM doesn't support for remote notification\nYou can either wait for FCM to develop it or you have to write native code to create notifications.\n- for iOS, you can do it in `didReceiveRemoteNotification` in `appDelegate.m`\n- for android, you can do it by implementing a service similar to \"com.evollu.react.fcm.MessagingService\"\n\nOr if you have a good way to wake up react native javascript thread please let me know, although I'm worring waking up the whole application is too expensive.\n\n#### What about new notifications in iOS 10\nCongratulations, now you have 5 notification handler to register!\nin sum\n- `willPresentNotification` is introduced in iOS 10 and will only be called when local/remote notification will show up. This allows you to run some code **before** notification shows up. You can also decide how to show the notification.\n- `didReceiveNotificationResponse` is introduced in iOS 10 and provides user's response together with local/remote notification. It could be swipe, text input etc.\n- `didReceiveLocalNotification` is for iOS 9 and below. Triggered when user clicks local notification. replaced by `didReceiveNotificationResponse`\n- `didReceiveRemoteNotification` is for iOS 9 and below. Triggered when remote notification received.\n- `didReceiveRemoteNotification:fetchCompletionHandler` is for both iOS 9 and 10. it gets triggered 2 times for each remote notification. 1st time when notification is received. 2nd time when notification is clicked. in iOS 9, it serves us the purpose of both `willPresentNotification` and `didReceiveNotificationResponse` but for remote notification only. in iOS 10, you don't need it in most of the case unless you need to do background fetching\n\nGreat, how do I configure for FCM?\nIt is up to you! FCM is just a bridging library that passes notification into javascript world. You can define your own NSDictionary and pass it into notification.\n\n#### I want to show notification when app is in foreground\nUse `show_in_foreground` attribute to tell app to show banner even if the app is in foreground.\nWarning: foreground banner won't show in android for remote notification due to limitation of FCM SDK. However you can create a local notification yourself. A pull is welcome to fix this.\n\n#### Some features are missing\nIssues and pull requests are welcome. Let's make this thing better!\n \n#### Credits\nLocal notification implementation is inspired by react-native-push-notification by zo0r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/evollu/react-native-fcm.git"
  },
  "version": "2.4.0"
}
